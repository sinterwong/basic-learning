SET(3RDPARTY_ROOT ${PROJECT_SOURCE_DIR}/3rdparty)
SET(3RDPARTY_DIR ${PROJECT_SOURCE_DIR}/3rdparty/target/${TARGET_OS}_${TARGET_ARCH})
MESSAGE(STATUS "3RDPARTY_DIR: ${3RDPARTY_DIR}")

MACRO(LOAD_SPDLOG)
    ADD_DEFINITIONS(-DSPDLOG_USE_STD_FORMAT)
    FIND_PACKAGE(spdlog REQUIRED)
ENDMACRO()


MACRO(LOAD_GFLAGS)
    # SET(GFLAGS_HOME ${3RDPARTY_DIR}/gflags)
    # LIST(APPEND CMAKE_PREFIX_PATH ${GFLAGS_HOME}/lib/cmake)
    # SET(GFLAGS_LIB_DIR ${GFLAGS_HOME}/lib)
    FIND_PACKAGE(gflags REQUIRED)
ENDMACRO()

MACRO(LOAD_GTEST)
    FIND_PACKAGE(GTest REQUIRED)
ENDMACRO()

MACRO(LOAD_OPENCV)
    FIND_PACKAGE(OpenCV REQUIRED COMPONENTS core imgcodecs imgproc highgui video videoio)
    IF(OpenCV_INCLUDE_DIRS)
        MESSAGE(STATUS "Opencv library status:")
        MESSAGE(STATUS "    include path: ${OpenCV_INCLUDE_DIRS}")
        MESSAGE(STATUS "    opencv version: ${OpenCV_VERSION}")
        MESSAGE(STATUS "    libraries: ${OpenCV_LIBS}")
        ELSE()
        MESSAGE(FATAL_ERROR "OpenCV not found!")
    ENDIF()
ENDMACRO()